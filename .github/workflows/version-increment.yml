name: Bump Version and Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  bump-version-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Bump version
        run: |
          # Extract current version from pyproject.toml
          CURRENT_VERSION=$(grep -oP '(?<=version = ")[^"]*' pyproject.toml)
          echo "Current version: $CURRENT_VERSION"

          # Split version into components
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "New version: $NEW_VERSION"

          # Update version in pyproject.toml
          sed -i 's|version = "'${CURRENT_VERSION}'"|version = "'${NEW_VERSION}'"|' pyproject.toml

          # Configure git and commit changes
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Bump version from $CURRENT_VERSION to $NEW_VERSION [skip ci]"
          git push

      - name: Create and push git tag
        run: |
          VERSION=$NEW_VERSION
          git tag "v$VERSION"
          git push origin "v$VERSION"

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
